{"version":3,"sources":["./src/app/modules/auth/services/auth.service.ts","./src/app/modules/auth/components/login-form/login-form.component.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/containers/auth-page/auth-page.component.ts","./src/app/modules/auth/components/register-form/register-form.component.ts"],"names":["AuthService","LoginFormComponent","fb","form","this","group","email","password","required","routes","path","component","AuthPageComponent","activeChild$","ReplaySubject","componentRef","next","activate","children","pathMatch","redirectTo","RegisterFormComponent","AuthModule","ngModule","providers","forChild"],"mappings":"2NAKO,Y,MAAMA,EACX,gB,6CADWA,I,yBAAAA,EAAW,QAAXA,EAAW,qBAFV,S,GAEP,G,kFCoCA,Y,MAAMC,EAMX,YAAmBC,GAAA,KAAAA,KALnB,KAAAC,KAAOC,KAAKF,GAAGG,MAAM,CACnBC,MAAO,CAAC,GAAI,IAAWA,OACvBC,SAAU,CAAC,GAAI,IAAWC,YAK5B,a,6CARWP,GAAkB,Y,uBAAlBA,EAAkB,6WAnC3B,eAAkB,6BAAkB,OACpC,cACE,uEACF,OACA,iBACE,2BACE,oBAAW,gBAAK,OAChB,kBACF,OACA,2BACE,qBAAW,oBAAQ,OACnB,mBACF,OACA,oBACE,oBACF,OACA,eACE,eAAkC,0BAAc,OAClD,OACF,Q,MAfM,iCAaC,wC,oQAkBJ,G,kEC7BDQ,EAAiB,CACrB,CACEC,KAAM,GACNC,UCyCG,M,MAAMC,EAGX,cAFA,KAAAC,aAAe,IAAIC,EAAA,EAAsB,GAIzC,SAASC,GACPX,KAAKS,aAAaG,KAChBD,aAAwB,EAAqB,QAAU,YAI3D,a,6CAXWH,I,uBAAAA,EAAiB,+VA1C1B,oBACE,gBACE,gBACE,gBACE,gBACE,0BAAe,oCAAY,EAAAK,SAAA,MAAkB,OAC/C,OACF,OACF,OACA,gBACE,aACA,gBACE,gBACE,iBACE,gBAAwB,aAAG,qBAAS,OAAI,OAC1C,OACF,OACF,OACF,OACF,OACF,Q,MANe,wC,4YA4BZ,GDxCHC,SAAU,CACR,CAAER,KAAM,GAAIS,UAAW,OAAQC,WAAY,UAC3C,CAAEV,KAAM,SAAUC,UAAW,GAC7B,CAAED,KAAM,WAAYC,UEoBnB,M,MAAMU,EAMX,YAAmBnB,GAAA,KAAAA,KALnB,KAAAC,KAAOC,KAAKF,GAAGG,MAAM,CACnBC,MAAO,CAAC,GAAI,IAAWA,OACvBC,SAAU,CAAC,GAAI,IAAWC,YAK5B,a,6CARWa,GAAqB,Y,uBAArBA,EAAqB,sWAjC9B,eAAkB,8BAAmB,OACrC,iBACE,2BACE,oBAAW,gBAAK,OAChB,kBACF,OACA,2BACE,oBAAW,mBAAQ,OACnB,mBACF,OACA,iBACE,iBACE,iBACE,oBAAkC,0BAAc,OAClD,OACA,iBACE,eAAgC,2BAAe,OACjD,OACF,OACF,OACF,Q,MAnBM,iCAeK,wC,yLAiBR,OFLA,Y,MAAMC,EACX,iBACE,MAAO,CACLC,SAAUD,EACVE,UAAW,CAAC,K,8BAJLF,I,oDAAAA,IAAU,SARZ,CACP,IACA,IACA,IACA,IACA,IAAaG,SAAShB,O,GAGnB","file":"auth-auth-module.084ab083779fe59a9136.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor() {}\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-form',\n  template: `\n    <h1 class=\"title\">Sign In With Email</h1>\n    <p class=\"description\">\n      No mail will be sent to this address after it is verified.\n    </p>\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput placeholder=\"john.doe@example.com\" />\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input type=\"password\" matInput placeholder=\"secret123\" />\n      </mat-form-field>\n      <button class=\"button is-block is-primary is-fullwidth is-medium\">\n        Submit\n      </button>\n      <p class=\"description\">\n        <a [routerLink]=\"['../register']\">Create Account</a>\n      </p>\n    </form>\n  `,\n  styles: [\n    `\n      :host,\n      form {\n        display: flex;\n        flex-direction: column;\n      }\n      .description {\n        margin: 1.4rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginFormComponent implements OnInit {\n  form = this.fb.group({\n    email: ['', Validators.email],\n    password: ['', Validators.required],\n  });\n\n  constructor(public fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { MaterialModule } from '../material/material.module';\nimport { AuthService } from './services/auth.service';\nimport { AuthPageComponent } from './containers/auth-page/auth-page.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPageComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'signin' },\n      { path: 'signin', component: LoginFormComponent },\n      { path: 'register', component: RegisterFormComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [LoginFormComponent, RegisterFormComponent, AuthPageComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n      providers: [AuthService],\n    };\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nimport { RegisterFormComponent } from '../../components/register-form/register-form.component';\nimport { LoginFormComponent } from '../../components/login-form/login-form.component';\n\n@Component({\n  selector: 'app-auth-page',\n  template: `\n    <section class=\"container\">\n      <div class=\"columns is-multiline\">\n        <div class=\"column is-6 is-offset-3 register\">\n          <div class=\"columns content\">\n            <div class=\"column right has-text-centered\">\n              <router-outlet (activate)=\"activate($event)\"></router-outlet>\n            </div>\n          </div>\n        </div>\n        <div class=\"column is-6 is-offset-3\">\n          <br />\n          <nav class=\"level\">\n            <div class=\"level-left\">\n              <div class=\"level-item\">\n                <a [routerLink]=\"['/']\"><i>Scheduler</i></a>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </section>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        height: 100vh;\n      }\n      .register {\n        margin-top: 10rem;\n        background: white;\n        border-radius: 10px;\n        border: 2px solid #eee;\n      }\n      .content {\n        min-height: auto;\n        margin: 4.5rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthPageComponent implements OnInit {\n  activeChild$ = new ReplaySubject<string>(1);\n\n  constructor() {}\n\n  activate(componentRef: ComponentRef<unknown>): void {\n    this.activeChild$.next(\n      componentRef instanceof LoginFormComponent ? 'login' : 'register'\n    );\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register-form',\n  template: `\n    <h1 class=\"title\">Register With Email</h1>\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput placeholder=\"john.doe@example.com\" />\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input type=\"password\" matInput placeholder=\"secret123\" />\n      </mat-form-field>\n      <div class=\"level\">\n        <div class=\"level-left\">\n          <div class=\"level-item\">\n            <button class=\"button is-primary\">Create Account</button>\n          </div>\n          <div class=\"level-item\">\n            <a [routerLink]=\"['../signin']\">Sign In Instead</a>\n          </div>\n        </div>\n      </div>\n    </form>\n  `,\n  styles: [\n    `\n      :host,\n      form {\n        display: flex;\n        flex-direction: column;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterFormComponent implements OnInit {\n  form = this.fb.group({\n    email: ['', Validators.email],\n    password: ['', Validators.required],\n  });\n\n  constructor(public fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n}\n"],"sourceRoot":"webpack:///"}