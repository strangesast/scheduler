{"version":3,"sources":["./node_modules/@firebase/installations/dist/index.esm.js","./node_modules/@firebase/analytics/dist/index.esm.js","./node_modules/idb/build/idb.js"],"names":["ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","error","code","includes","getInstallationsEndpoint","_a","INSTALLATIONS_API_URL","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","replace","creationTime","Date","now","getErrorFromResponse","requestName","this","responseJson","errorData","label","json","sent","create","serverCode","serverMessage","message","serverStatus","status","getHeaders","Headers","Accept","apiKey","getHeadersWithAuth","appConfig","refreshToken","headers","append","INTERNAL_AUTH_VERSION","getAuthorizationHeader","retryIfServerError","fn","result","createInstallationRequest","fid","endpoint","request","responseValue","_b","method","body","JSON","stringify","authVersion","appId","sdkVersion","fetch","ok","registrationStatus","authToken","sleep","ms","Promise","resolve","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","array","btoa","String","fromCharCode","apply","substr","encode","test","getKey","appName","fidChangeCallbacks","Map","fidChanged","key","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","e_1","callbacks","get","callbacks_1","callbacks_1_1","next","done","callback","value","e_1_1","return","call","broadcastChannel","BroadcastChannel","onmessage","e","data","size","close","instance","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","oldVersion","createObjectStore","set","db","tx","objectStore","oldValue","transaction","put","complete","remove","delete","update","updateFn","store","newValue","undefined","getInstallationEntry","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","updateOrCreateInstallationEntry","entryWithPromise","navigator","onLine","reject","inProgressEntry","registrationTime","registeredInstallationEntry","trys","push","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthTokenRequest","platformLoggerProvider","platformLogger","getGenerateAuthTokenEndpoint","getImmediate","optional","getPlatformInfoString","installation","refreshAuthToken","dependencies","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","completeInstallationRegistration","deleteInstallationRequest","getDeleteEndpoint","getMissingValueError","valueName","INTERNAL","registerComponent","container","app","getProvider","options","name","configKeys_1","configKeys_1_1","keyName","extractAppConfig","getId","catch","console","getToken","deleteInstallation","onIdChange","callbackSet","Set","add","addCallback","removeCallback","registerVersion","gtagCoreFunction","wrappedGtagFunction","GTAG_URL","GtagCommand","EventName","logger","ERRORS","initializedIdPromisesMap","dataLayerName","gtagName","globalInitDone","settings","isSupported","installations","errorInfo","analyticsId","id","scriptTags","window","document","getElementsByTagName","_i","Object","values","length","tag","src","findGtagScriptOnPage","script","createElement","async","head","appendChild","insertScriptTag","dataLayer","Array","isArray","getOrCreateDataLayer","gtagFunctionName","gtagCore","_args","arguments","command","idOrNameOrParams","gtagParams","EVENT","initializationPromisesToWaitFor","gaSendToList","gaSendToList_1","initializationPromise","all","then","CONFIG","SET","wrapGtag","wrappedGtag","wrapOrCreateGtag","initializeGAId","logEvent","eventName","eventParams","gtagFunction","params","global","setCurrentScreen","screenName","setUserId","setUserProperties","properties","flatProperties","keys","setAnalyticsCollectionEnabled","enabled","factory","setServiceProps","reason","registerAnalytics","exports","toArray","arr","prototype","slice","promisifyRequest","onsuccess","onerror","promisifyRequestCall","obj","args","p","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","forEach","prop","defineProperty","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","nativeObject","getAll","query","count","items","iterateCursor","continue","openDb","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb"],"mappings":"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","file":"firebase-analytics.65b7b65378340ab2f16d.js","sourcesContent":["import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spread, __values, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar name = \"@firebase/installations\";\nvar version = \"0.4.15\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    var key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    var e_1, _a;\r\n    var callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    try {\r\n        for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n            var callback = callbacks_1_1.value;\r\n            callback(fid);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    var channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key: key, fid: fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nvar broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = function (e) {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, objectStore, oldValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, objectStore.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    return [4 /*yield*/, objectStore.put(value, key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 4:\r\n                    _a.sent();\r\n                    if (!oldValue || oldValue.fid !== value.fid) {\r\n                        fidChanged(appConfig, value.fid);\r\n                    }\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n                        fidChanged(appConfig, newValue.fid);\r\n                    }\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n */\r\nfunction onIdChange(_a, callback) {\r\n    var appConfig = _a.appConfig;\r\n    addCallback(appConfig, callback);\r\n    return function () {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        var installations = {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); },\r\n            onIdChange: function (callback) {\r\n                return onIdChange(dependencies, callback);\r\n            }\r\n        };\r\n        return installations;\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n","import { __assign, __awaiter, __generator } from 'tslib';\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, areCookiesEnabled, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ANALYTICS_ID_FIELD = 'measurementId';\r\n// Key to attach FID to in gtag params.\r\nvar GA_FID_KEY = 'firebase_id';\r\nvar ORIGIN_KEY = 'origin';\r\nvar GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\r\nvar GtagCommand;\r\n(function (GtagCommand) {\r\n    GtagCommand[\"EVENT\"] = \"event\";\r\n    GtagCommand[\"SET\"] = \"set\";\r\n    GtagCommand[\"CONFIG\"] = \"config\";\r\n})(GtagCommand || (GtagCommand = {}));\r\n/*\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\r\nvar EventName;\r\n(function (EventName) {\r\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\r\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\r\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\r\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\r\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\r\n    /** @deprecated */\r\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\r\n    EventName[\"EXCEPTION\"] = \"exception\";\r\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\r\n    EventName[\"LOGIN\"] = \"login\";\r\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\r\n    EventName[\"PURCHASE\"] = \"purchase\";\r\n    EventName[\"REFUND\"] = \"refund\";\r\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\r\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\r\n    EventName[\"SEARCH\"] = \"search\";\r\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\r\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\r\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\r\n    /** @deprecated */\r\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\r\n    EventName[\"SHARE\"] = \"share\";\r\n    EventName[\"SIGN_UP\"] = \"sign_up\";\r\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\r\n    EventName[\"VIEW_CART\"] = \"view_cart\";\r\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\r\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\r\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\r\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\r\n})(EventName || (EventName = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nfunction logEvent(gtagFunction, analyticsId, eventName, eventParams, options) {\r\n    var params = eventParams || {};\r\n    if (!options || !options.global) {\r\n        params = __assign(__assign({}, eventParams), { 'send_to': analyticsId });\r\n    }\r\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n    gtagFunction(GtagCommand.EVENT, eventName, params || {});\r\n}\r\n// TODO: Brad is going to add `screen_name` to GA Gold config parameter schema\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nfunction setCurrentScreen(gtagFunction, analyticsId, screenName, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'screen_name': screenName\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nfunction setUserId(gtagFunction, analyticsId, id, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'user_id': id });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_id': id\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nfunction setUserProperties(gtagFunction, analyticsId, properties, options) {\r\n    if (options && options.global) {\r\n        var flatProperties = {};\r\n        for (var _i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            // use dot notation for merge behavior in gtag.js\r\n            flatProperties[\"user_properties.\" + key] = properties[key];\r\n        }\r\n        gtagFunction(GtagCommand.SET, flatProperties);\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_properties': properties\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nfunction setAnalyticsCollectionEnabled(analyticsId, enabled) {\r\n    window[\"ga-disable-\" + analyticsId] = !enabled;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n */\r\nfunction initializeGAId(app, installations, gtagCore) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var fid;\r\n        var _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getId()];\r\n                case 1:\r\n                    fid = _b.sent();\r\n                    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n                    // but since it is idempotent, we can call it multiple times.\r\n                    // We keep it together with other initialization logic for better code structure.\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    gtagCore('js', new Date());\r\n                    // It should be the first config command called on this GA-ID\r\n                    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n                    gtagCore(GtagCommand.CONFIG, app.options[ANALYTICS_ID_FIELD], (_a = {},\r\n                        _a[GA_FID_KEY] = fid,\r\n                        // guard against developers accidentally setting properties with prefix `firebase_`\r\n                        _a[ORIGIN_KEY] = 'firebase',\r\n                        _a.update = true,\r\n                        _a));\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction insertScriptTag(dataLayerName) {\r\n    var script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = GTAG_URL + \"?l=\" + dataLayerName;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/** Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\")\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    var dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer\r\n * @param initializedIdPromisesMap Map of gaIds to their initialization promises\r\n */\r\nfunction wrapGtag(gtagCore, initializedIdPromisesMap) {\r\n    return function (command, idOrNameOrParams, gtagParams) {\r\n        // If event, check that relevant initialization promises have completed.\r\n        if (command === GtagCommand.EVENT) {\r\n            var initializationPromisesToWaitFor = [];\r\n            // If there's a 'send_to' param, check if any ID specified matches\r\n            // a FID we have begun a fetch on.\r\n            if (gtagParams && gtagParams['send_to']) {\r\n                var gaSendToList = gtagParams['send_to'];\r\n                // Make it an array if is isn't, so it can be dealt with the same way.\r\n                if (!Array.isArray(gaSendToList)) {\r\n                    gaSendToList = [gaSendToList];\r\n                }\r\n                for (var _i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {\r\n                    var sendToId = gaSendToList_1[_i];\r\n                    var initializationPromise = initializedIdPromisesMap[sendToId];\r\n                    // Groups will not be in the map.\r\n                    if (initializationPromise) {\r\n                        initializationPromisesToWaitFor.push(initializationPromise);\r\n                    }\r\n                    else {\r\n                        // There is an item in 'send_to' that is not associated\r\n                        // directly with an FID, possibly a group.  Empty this array\r\n                        // and let it get populated below.\r\n                        initializationPromisesToWaitFor = [];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // This will be unpopulated if there was no 'send_to' field , or\r\n            // if not all entries in the 'send_to' field could be mapped to\r\n            // a FID. In these cases, wait on all pending initialization promises.\r\n            if (initializationPromisesToWaitFor.length === 0) {\r\n                for (var _a = 0, _b = Object.values(initializedIdPromisesMap); _a < _b.length; _a++) {\r\n                    var idPromise = _b[_a];\r\n                    initializationPromisesToWaitFor.push(idPromise);\r\n                }\r\n            }\r\n            // Run core gtag function with args after all relevant initialization\r\n            // promises have been resolved.\r\n            Promise.all(initializationPromisesToWaitFor)\r\n                // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n                .then(function () {\r\n                return gtagCore(GtagCommand.EVENT, idOrNameOrParams, gtagParams || {});\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else if (command === GtagCommand.CONFIG) {\r\n            var initializationPromiseToWait = initializedIdPromisesMap[idOrNameOrParams] ||\r\n                Promise.resolve();\r\n            initializationPromiseToWait\r\n                .then(function () {\r\n                gtagCore(GtagCommand.CONFIG, idOrNameOrParams, gtagParams);\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else {\r\n            // SET command.\r\n            // Splitting calls for CONFIG and SET to make it clear which signature\r\n            // Typescript is checking.\r\n            gtagCore(GtagCommand.SET, idOrNameOrParams);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializedIdPromisesMap Map of gaId to initialization promises.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified)\r\n */\r\nfunction wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    var gtagCore = function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializedIdPromisesMap);\r\n    return {\r\n        gtagCore: gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    var scriptTags = window.document.getElementsByTagName('script');\r\n    for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {\r\n        var tag = _a[_i];\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-ga-id\" /* NO_GA_ID */] = \"\\\"\" + ANALYTICS_ID_FIELD + \"\\\" field is empty in \" +\r\n        'Firebase config. Firebase Analytics ' +\r\n        'requires this field to contain a valid measurement ID.',\r\n    _a[\"already-exists\" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the measurement ID ${id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each measurement ID.',\r\n    _a[\"already-initialized\" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    _a[\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */] = 'Firebase Analytics Interop Component failed to instantiate',\r\n    _a[\"indexedDB-unsupported\" /* INDEXED_DB_UNSUPPORTED */] = 'IndexedDB is not supported by current browswer',\r\n    _a[\"invalid-indexedDB-context\" /* INVALID_INDEXED_DB_CONTEXT */] = \"Environment doesn't support IndexedDB: {$errorInfo}. \" +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments',\r\n    _a[\"cookies-not-enabled\" /* COOKIES_NOT_ENABLED */] = 'Cookies are not enabled in this browser environment. Analytics requires cookies to be enabled.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps gaId to FID fetch promises.\r\n */\r\nvar initializedIdPromisesMap = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nvar dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nvar gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nvar gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nvar wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nvar globalInitDone = false;\r\n/**\r\n * For testing\r\n */\r\nfunction resetGlobalVars(newGlobalInitDone, newGaInitializedPromise) {\r\n    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }\r\n    if (newGaInitializedPromise === void 0) { newGaInitializedPromise = {}; }\r\n    globalInitDone = newGlobalInitDone;\r\n    initializedIdPromisesMap = newGaInitializedPromise;\r\n    dataLayerName = 'dataLayer';\r\n    gtagName = 'gtag';\r\n}\r\n/**\r\n * For testing\r\n */\r\nfunction getGlobalVars() {\r\n    return {\r\n        initializedIdPromisesMap: initializedIdPromisesMap\r\n    };\r\n}\r\n/**\r\n * This must be run before calling firebase.analytics() or it won't\r\n * have any effect.\r\n * @param options Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\nfunction factory(app, installations) {\r\n    if (!areCookiesEnabled()) {\r\n        throw ERROR_FACTORY.create(\"cookies-not-enabled\" /* COOKIES_NOT_ENABLED */);\r\n    }\r\n    if (!isIndexedDBAvailable()) {\r\n        throw ERROR_FACTORY.create(\"indexedDB-unsupported\" /* INDEXED_DB_UNSUPPORTED */);\r\n    }\r\n    // Async but non-blocking.\r\n    validateIndexedDBOpenable().catch(function (error) {\r\n        throw ERROR_FACTORY.create(\"invalid-indexedDB-context\" /* INVALID_INDEXED_DB_CONTEXT */, {\r\n            errorInfo: error\r\n        });\r\n    });\r\n    var analyticsId = app.options[ANALYTICS_ID_FIELD];\r\n    if (!analyticsId) {\r\n        throw ERROR_FACTORY.create(\"no-ga-id\" /* NO_GA_ID */);\r\n    }\r\n    if (initializedIdPromisesMap[analyticsId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: analyticsId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        // Detect if user has already put the gtag <script> tag on this page.\r\n        if (!findGtagScriptOnPage()) {\r\n            insertScriptTag(dataLayerName);\r\n        }\r\n        getOrCreateDataLayer(dataLayerName);\r\n        var _a = wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    initializedIdPromisesMap[analyticsId] = initializeGAId(app, installations, gtagCoreFunction);\r\n    var analyticsInstance = {\r\n        app: app,\r\n        logEvent: function (eventName, eventParams, options) {\r\n            return logEvent(wrappedGtagFunction, analyticsId, eventName, eventParams, options);\r\n        },\r\n        setCurrentScreen: function (screenName, options) {\r\n            return setCurrentScreen(wrappedGtagFunction, analyticsId, screenName, options);\r\n        },\r\n        setUserId: function (id, options) {\r\n            return setUserId(wrappedGtagFunction, analyticsId, id, options);\r\n        },\r\n        setUserProperties: function (properties, options) {\r\n            return setUserProperties(wrappedGtagFunction, analyticsId, properties, options);\r\n        },\r\n        setAnalyticsCollectionEnabled: function (enabled) {\r\n            return setAnalyticsCollectionEnabled(analyticsId, enabled);\r\n        }\r\n    };\r\n    return analyticsInstance;\r\n}\n\nvar name = \"@firebase/analytics\";\nvar version = \"0.4.1\";\n\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nvar ANALYTICS_TYPE = 'analytics';\r\nfunction registerAnalytics(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(ANALYTICS_TYPE, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\r\n        settings: settings,\r\n        EventName: EventName,\r\n        isSupported: isSupported\r\n    }));\r\n    instance.INTERNAL.registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    instance.registerVersion(name, version);\r\n    function internalFactory(container) {\r\n        try {\r\n            var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: analytics.logEvent\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics(firebase);\r\n/**\r\n * this is a public static method provided to users that wraps three different checks:\r\n *\r\n * 1. check if cookie is enabled in current browser.\r\n * 2. check if IndexedDB is supported by the browser environment.\r\n * 3. check if the current browser context is valid for using IndexedDB.\r\n */\r\nfunction isSupported() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var isDBOpenable, error_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!areCookiesEnabled()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!isIndexedDBAvailable()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, validateIndexedDBOpenable()];\r\n                case 2:\r\n                    isDBOpenable = _a.sent();\r\n                    return [2 /*return*/, isDBOpenable];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\nexport { factory, getGlobalVars, registerAnalytics, resetGlobalVars, settings };\n//# sourceMappingURL=index.esm.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"sourceRoot":"webpack:///"}