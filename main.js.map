{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/containers/app.component.ts","./src/app/modules/app-routing.module.ts","./src/app/modules/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAkBnC,MAAM,YAAY;IAXzB;QAYE,UAAK,GAAG,QAAQ,CAAC;KAalB;;wEAdY,YAAY;4FAAZ,YAAY;QARvB,yEACE;QAAA,oEAAG;QAAA,uDAAqB;;QAAA,4DAAI;QAC9B,4DAAM;QACN,yEAAQ;QAAA,+DAAI;QAAA,4DAAS;QACrB,2EAA+B;;QAH1B,0DAAqB;QAArB,2IAAqB;;6FAOf,YAAY;cAXxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;GAMT;gBACD,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACsC;AAEjB;AAEN;AACG;AACE;;;AAetD,MAAM,SAAS;;wFAAT,SAAS,cAFR,sEAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;SACpF;mIAIU,SAAS,mBAXlB,sEAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;6FAMd,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,sEAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;iBACpF;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,sEAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,YAAY;QACpB,UAAU,EAAE,2BAA2B;QACvC,WAAW,EAAE,qBAAqB;QAClC,SAAS,EAAE,mBAAmB;QAC9B,aAAa,EAAE,uBAAuB;QACtC,iBAAiB,EAAE,4BAA4B;KAChD;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,yFAAyF;KACrG;CACF,CAAC;AAE+B;;;;;;;;;;;;;ACfjC;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,kEAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { SwPush } from '@angular/service-worker';\n\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <div class=\"content\">\n    <p>{{title | titlecase}}</p>\n  </div>\n  <button>Test</button>\n  <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'arriba';\n\n  // readonly VAPID_PUBLIC_KEY = environment.push.publicKey;\n\n  // constructor(public firestore: AngularFirestore, public swPush: SwPush) {}\n\n  // subscribeToNotifications(): void {\n  //   this.swPush.requestSubscription({\n  //           serverPublicKey: this.VAPID_PUBLIC_KEY\n  //       })\n  //       .then(sub => console.log('sub', sub))\n  //       .catch(err => console.error('Could not subscribe to notifications', err));\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from '../containers/app.component';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const environment = {\n  production: false,\n  firebase: {\n    apiKey: '<your-key>',\n    authDomain: '<your-project-authdomain>',\n    databaseURL: '<your-database-URL>',\n    projectId: '<your-project-id>',\n    storageBucket: '<your-storage-bucket>',\n    messagingSenderId: '<your-messaging-sender-id>'\n  },\n  push: {\n    publicKey: 'BD5zsnDzx9C49EvQwQRsfy39JllleJC0Sf9G9muRi_vuAv_u5BymN35rbWgJFosyrizKC7q5bDSaTqvCKLD2LPM',\n  },\n};\n\nimport 'zone.js/dist/zone-error';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/modules/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}